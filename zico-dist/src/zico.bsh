/**
 * Copyright 2012-2013 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

__zico() {

  _mbean = "zico:name=ReceiverContext,type=ZorkaStats";
  _traceTime = zorka.longCfg("zico.trace.time", 250);

  spy.add(spy.instrument()
    .onEnter(spy.fetchArg("THIS", 0),
      spy.format("HOST", "${THIS.hostInfo.name}"),
      spy.subchain(
        spy.valSetFilterOut("HOST", zorka.set(zorka.getHostname())),
        tracer.begin("ZICO", _traceTime),
        tracer.attr("HOST", "HOST")))
    .onSubmit(
      spy.zorkaStats("java", _mbean, "zico", "ALL"),
      spy.zorkaStats("java", _mbean, "zico", "${HOST}"))
    .include(
      spy.byMethod(0, "com.jitlogic.zico.core.ReceiverContext", "processTraceRecord", null)));

  // this method is private, so it has to be explicitly included for tracing
  tracer.include(spy.byMethod(0, "com.jitlogic.zico.core.ReceiverContext", "processTraceRecord", null));

  spy.add(spy.instance()
    .onEnter(spy.fetchArg("OFFS", 2), spy.fetchArg("LENGTH", 3),
      tracer.traceAttr("ZICO", "OFFS", "OFFS"),
      tracer.traceAttr("ZICO", "LENGTH", "LENGTH"))
    .include(spy.byMethod("com.jitlogic.zico.core.ReceiverContext", "save")));


  return this;
}

zico = __zico();

