; /**
;  * From book: The Seasoned Schemer, by Daniel P. Friedman and Matthias Felleisen.
;  *
;  * Chapter 11: Welcome Back
;  */

(defn member? (a lat)
  (cond
    ((null? lat) #f)
    (else
      (or
        (eq? a (car lat))
        (member? a (cdr lat))))))

(deftest test-member?
  (is (member? 'sardines '(Italian sardines spaghetti parsley))))





(defn two-in-a-row? (lat)
  (cond
    ((or (null? lat) (null? (cdr lat))) #f)
    ((eq? (car lat) (cadr lat)) #t)
    (else (two-in-a-row? (cdr lat)))))

(deftest test-two-in-a-row?--1
  (isnt (two-in-a-row? '(Italian sardines spaghetti parsley)))
  (is (two-in-a-row? '(Italian sardines sardines spaghetti parsley)))
  (isnt (two-in-a-row? '(Italian sardines more sardines spaghetti parsley))))





(defn is-first? (a lat)
  (cond
    ((null? lat) #f)
    (else (eq? (car lat) a))))

(defn two-in-a-row? (lat)
  (cond
    ((null? lat) #f)
    (else
      (or
        (is-first? (car lat) (cdr lat))
        (two-in-a-row? (cdr lat))))))


(deftest test-two-in-a-row?--2
  (isnt (two-in-a-row? '(Italian sardines spaghetti parsley)))
  (is (two-in-a-row? '(Italian sardines sardines spaghetti parsley)))
  (isnt (two-in-a-row? '(Italian sardines more sardines spaghetti parsley))))




(defn is-first-b? (a lat)
  (cond
   ((null? lat) #f)
   (else
     (or
       (eq? (car lat) a)
       (two-in-a-row? lat)))))

(defn two-in-a-row? (lat)
  (cond
    ((null? lat) #f)
    (else (is-first-b? (car lat) (cdr lat)))))

(deftest test-two-in-a-row?--3
  (isnt (two-in-a-row? '(Italian sardines spaghetti parsley)))
  (is (two-in-a-row? '(Italian sardines sardines spaghetti parsley)))
  (isnt (two-in-a-row? '(Italian sardines more sardines spaghetti parsley))))



(defn two-in-a-row-b? (a lat)
  (cond
    ((null? lat) #f)
    (else
      (or
        (eq? (car lat) a)
        (two-in-a-row-b? (car lat) (cdr lat))))))

(defn two-in-a-row? (lat)
  (cond
    ((null? lat) #f)
    (else (two-in-a-row-b? (car lat) (cdr lat)))))

(deftest test-two-in-a-row?--4
  (isnt (two-in-a-row? '(Italian sardines spaghetti parsley)))
  (is (two-in-a-row? '(Italian sardines sardines spaghetti parsley)))
  (isnt (two-in-a-row? '(Italian sardines more sardines spaghetti parsley))))



; /**
;  * The Eleventh Commandment:
;  *
;  * Use additional arguments when a function needs to know what other
;  * arguments to the function have been like so far.
;  */

(defn sum-of-prefixes-b (s tup)
  (cond
    ((null? tup) null)
    (else
      (cons
        (+ s (car tup))
        (sum-of-prefixes-b (+ s (car tup)) (cdr tup))))))

(defn sum-of-prefixes (tup)
  (cond
    ((null? tup) null)
    (else
      (cons (car tup) (sum-of-prefixes-b (car tup) (cdr tup))))))

(deftest test-sum-of-prefixes
  (is= '(2 3 12 29 29) (sum-of-prefixes '(2 1 9 17 0)))
  (is= '(1 2 3 4 5) (sum-of-prefixes '(1 1 1 1 1))))



(defn pick (n lat)
  (cond
    ((null? lat) nil)
    ((= n 1) (car lat))
    (else (pick (dec n) (cdr lat)))))

(defn scramble-b (t r)
  (cond
    ((null? t) nil)
    (else
      (cons
        (pick (car t) (cons (car t) r))
        (scramble-b (cdr t) (cons (car t) r))))))

(defn scramble (t)
  (scramble-b t '()))

(deftest test-scramble
  (is=
    '(1 1 1 1 1 4 1 1 1 9)
    (scramble '(1 1 1 3 4 2 1 1 9 2)))
  (is=
    '(1 1 1 1 1 1 1 1 1)
    (scramble '(1 2 3 4 5 6 7 8 9)))
  (is=
    '(1 1 1 1 1 1 1 1 2 8 2)
    (scramble '(1 2 3 1 2 3 4 1 8 2 10))))

